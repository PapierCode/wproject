/**
*
* Navigation dans l'entÃªte
*
** Bouton ouvrir/fermer
** Container
** Liste
** Lien
*
*
**/


@use "../framework/frk-variables" as *;
@use "../framework/frk-functions" as *;
@use "../framework/frk-mixins" as *;


/*============================================
=            Bouton ouvrir/fermer            =
============================================*/

.h-nav-btn-box {
    position: absolute;
    top:$space;
    right:$space;
    z-index: 1;
	color:$color-black;
    transition:transform $t-nav ease;

    .h-nav-is-open & {
        transform:translateX($h-nav-w-s);
        transition:transform $t-nav ease;
	}

	@media ( min-width : em($mq-nav-l) ) {

		.h-nav-is-open & {
			transform:translateX($h-nav-w-l);
		}
	}
	@media ( min-width : em($mq-layout-mw) ) {
		display:none;
	}
}

.h-nav-btn {
    display: flex;
	align-items: center;
    
    .h-nav-is-open & {
        position: sticky;
        top:$space;
    }
}

.h-nav-btn-ico {	

	$line-w : 24;
	$line-h : 4;
	$arrow-translate : 10;

	width: rem($h-btn-nav-size);
	height: rem($h-btn-nav-size);
	position: relative;
	transition:all $t-nav-btn-ico ease;
	background-color: $color-black;

	overflow: hidden;
	&:before, &:after {
		content: "";
		width: rem($line-w);
		height: rem($line-h);
		position: absolute;
		z-index: 1;
		top:50%;
		left:50%;
		margin: rem(-$line-h/2,0,0,-$line-w/2);
		background-color: $color-white;
		transform-origin:center center 0;
		transition:all $t-nav-btn-ico ease;
	}
	&:before { transform:translateY(rem(-$arrow-translate)); }
	&:after { transform:translateY(rem($arrow-translate)); }

	.h-nav-is-open & {
		background-color: $color-black;

		&:before, &:after { transition:all $t-nav-btn-ico ease; }
		&:before { transform: translateY(0) rotate(-45deg); }
		&:after { transform: translateY(0) rotate(45deg); }
	}

	.h-nav-btn:hover &, .h-nav-btn:focus & {
		background-color: transparent;
		transition:all $t-nav-btn-ico ease;

		&:before, &:after {
			background-color: $color-black;
			transition:all $t-nav-btn-ico ease;
			transition:all $t-nav-btn-ico ease;
		}
		&:before {
			transform: translate(rem($arrow-translate),0) rotate(45deg);
			transform-origin: left top;
		}
		&:after {
			transform: translate(rem($arrow-translate),0) rotate(-45deg);
			transform-origin: left bottom;
		}
	}

	.h-nav-is-open .h-nav-btn:hover &, .h-nav-is-open .h-nav-btn:focus & {

		&:before {
			transform: translateY(0) rotate(-45deg);
			transform-origin: right top;
		}
		&:after {
			transform: translateY(0) rotate(45deg);
			transform-origin: right bottom;
		}
	}
}
.h-nav-btn-ico--inner {
	display: block;
	&:before { display:none; }
	&:after { transform:none; }
	
	.h-nav-is-open & {
		&:after { transform: translateX(rem(100)); }
	}

	.h-nav-is-open .h-nav-btn:hover &, .h-nav-is-open .h-nav-btn:focus &,
	.h-nav-btn:hover &, .h-nav-btn:focus & {
		&:after { transform: translateX(rem(100)); }
	}
}
.h-nav-btn-txt {
	position: absolute;
	top:-666em;

	@media ( min-width : em($mq-layout-m) ) {
		position: static;
		overflow: hidden;
		padding: rem(5);
		align-self: stretch;
		display: flex;
		align-items: center;
		max-width: rem(100);
		font-family: $font-bold;
		font-size: rem(26);
		text-transform: uppercase;
		transition:all $t-nav-btn-ico ease;

		.h-nav-is-open & {
			max-width: 0;
			padding: 0;
			transition:all $t-nav-btn-ico ease;
		}
	}
}

.btn-overlay {
	position: absolute;
	z-index: 666;
	left:0;
	right: 0;
	bottom: 0;
	top:0;
	transform: translateX(-100%);
	width: 100%;
	height:100%;
	background-color:$color-black;
	opacity: 0;
	transition:opacity $t-nav ease, transform 0s ease $t-nav;

	.h-nav-is-open & {
		opacity:.6;
		transform: translateX(0);
		transition:opacity $t-nav ease;
	}

	@media ( min-width : em($mq-layout-mw) ) {
		display:none;
	}
}


/*=====  FIN Bouton ouvrir/fermer  =====*/

/*=================================
=            Container            =
=================================*/

.h-nav {
	position: absolute;
	z-index: 999;
	top: 0;
	left: 100%;
	bottom: 0;
	background-color: $color-yellow;

	width: $h-nav-w-s;
	padding: calc( #{rem($h-btn-nav-size)} + #{2 * $space} ) $space $space $space;

	@media ( min-width : em($mq-nav-l) ) {
		width:$h-nav-w-l;
	}
	@media ( min-width : em($mq-layout-mw) ) {
		background-color: transparent;
		position: static;
		width: auto;
		padding: 0;
	}
}

.h-nav-inner {}

/*=====  FIN Container  =====*/

/*=============================
=            Liste            =
=============================*/

.h-nav-list {

	@media ( min-width : em($mq-layout-mw) ) {
		display: flex;
		flex-wrap: wrap;
	}
}
.h-nav-item {

	&:nth-child(n+2) {
		margin-top:rem($space--h-nav);
	}

    @media ( min-width : em($mq-layout-mw) ) {  

		&:nth-child(n+2) {
			margin:rem(0,0,0,$space--h-nav);       
		}
	}
}


/*=====  FIN Liste  =====*/

/*============================
=            Lien            =
============================*/

.h-nav-link, .h-nav-link:visited {
	display:block;
	position: relative;
    text-decoration: none;
	transition: all $t-nav-link ease;	

	font-family: $font-regular;
	color: $color-white;
	background-color:$color-black;
	
    padding:rem($space--h-nav);

	.is-active & {
		background-color: $color-red;
		color:$color-black;
	}

	&:hover, &:focus {
		transition: all $t-nav-link ease;
		color: $color-black;
		background-color:$color-white;   
	}
		
	@media ( min-width : em($mq-nav-l) ) {

		.is-active & {
			transform:translateX(-$space/2);
			color:$color-black;
		}
		&:hover, &:focus {
			transform:translateX(-$space/2);
		}
	}
	@media ( min-width : em($mq-layout-mw) ) {

		.is-active & {
			background-color: $color-yellow;
			transform:translateY(rem($space--h-nav));
		}
		&:hover, &:focus {
			background-color: $color-white;
			transform:translateY(rem($space--h-nav));
		}
	}
}

.h-nav-link-inner {}


/*=====  FIN Lien  =====*/
