/**
*
* Framework : mixins
*
**/


@use "frk-variables" as *;
@use "frk-functions" as *;


/*==============================
=            Layout            =
==============================*/

@mixin layout( $type : p, $t : 1, $r : 1, $b : 1, $l : 1 ) {

	@if ( $type == p ) { $type : padding; }
	@if ( $type == m ) { $type : margin; }

	#{$type} : $t*$space $r*$space $b*$space $l*$space;

	@media ( min-width : em($mq-layout-l) ) {
		#{$type} : $t*$space-v-coef*$space $r*$space $b*$space-v-coef*$space $l*$space;
	}
	@media ( min-width : em($mq-layout-maw) ) {
		#{$type} : rem( $t*$space-v-coef*$space-max, $r*$space-max, $b*$space-v-coef*$space-max, $l*$space-max );
	}

}

.layout-ptrbl	{ @include layout(); }
.layout-prbl	{ @include layout( p, 0, 1, 1, 1 ); }

.layout-pt {
	padding-top : $space;

	@media ( min-width : em($mq-layout-l) ) {
		padding-top : $space-v-coef*$space;
	}
	@media ( min-width : em($mq-layout-maw) ) {
		padding-top : rem( $space-v-coef*$space-max );
	}
}
.layout-pb {
	padding-bottom : $space;

	@media ( min-width : em($mq-layout-l) ) {
		padding-bottom : $space-v-coef*$space;
	}
	@media ( min-width : em($mq-layout-maw) ) {
		padding-bottom : rem( $space-v-coef*$space-max );
	}
}

.layout-mt {
	margin-top : $space;

	@media ( min-width : em($mq-layout-l) ) {
		margin-top : $space-v-coef*$space;
	}
	@media ( min-width : em($mq-layout-maw) ) {
		margin-top : rem( $space-v-coef*$space-max );
	}
}
.layout-mb {
	margin-bottom : $space;

	@media ( min-width : em($mq-layout-l) ) {
		margin-bottom : $space-v-coef*$space;
	}
	@media ( min-width : em($mq-layout-maw) ) {
		margin-bottom : rem( $space-v-coef*$space-max );
	}
}

.layout-center {
	margin-right: auto;
	margin-left: auto;
}
.layout-maw {
	max-width:rem($maw-layout);
}
.layout-maw-txt {
	max-width:rem($maw-txt);
}


/*=====  FIN Layout  =====*/

@mixin table-with-border-spacing( $space ) {

	border-spacing:rem($space);
	margin-left:rem(-$space); // 2x
	width: calc( 100% + #{rem(2*$space)} );
	max-width: none;

}